{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/objectSpread.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js"],"names":["document","__webpack_require__","module","exports","documentElement","it","isRegExp","defined","that","searchString","NAME","TypeError","String","process","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","push","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","extname","str","len","redefine","target","src","safe","key","anObject","aFunction","SPECIES","O","D","S","C","constructor","undefined","Constructor","name","forbiddenField","defer","channel","port","ctx","invoke","html","cel","global","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","id","this","hasOwnProperty","fn","listener","event","data","args","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","set","clear","iterator","value","entries","e","ret","cof","TAG","ARG","tryGet","T","B","Object","callee","isObject","is","createElement","classof","ITERATOR","Iterators","getIteratorMethod","store","uid","Symbol","USE_SYMBOL","$exports","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","d","__webpack_exports__","hide","has","SRC","TO_STRING","$toString","TPL","inspectSource","val","isFunction","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","obj","_toString","toString","isPlainObject","isValidArrayIndex","n","parseFloat","floor","isFinite","JSON","stringify","toNumber","isNaN","makeMap","expectsLowerCase","map","create","list","toLowerCase","isReservedAttribute","remove","item","indexOf","hasOwn","cached","cache","hit","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","hyphenateRE","hyphenate","polyfillBind","boundFn","a","l","apply","_length","nativeBind","bind","toArray","extend","_from","toObject","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keys","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","parsePath","test","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","get","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","warn","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","type","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","Promise","then","withMacroTask","_withTask","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","shift","_isVList","ensureCtor","comp","base","__esModule","toStringTag","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","init","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","applyNS","registerDeepBindings","force","style","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","delete","version","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","$export","INCLUDES","P","F","includes","fails","arg","ArrayProto","un","dP","createDesc","object","_interopDefault","ex","logger","tslib_1","firebase","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","jsonEval","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","utf8Bytes","stringToByteArray","Sha1","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","message","logger$1","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","logWrapper","prefix","fatal","Error","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","isNodeSdk","readyState","called_1","wrappedFn_1","attachEvent","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","k","splitStringBySize","segsize","dataSegs","substring","each","doubleToIEEE754String","ln","bits","ebits","fbits","bias","Infinity","abs","pow","LN2","round","reverse","hexByteString","hexByte","isChromeExtensionContentScript","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","INTEGER_REGEXP_","intVal","exceptionGuard","stack","beingCrawled","search","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","begin","pieces","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","right","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","stringLength","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","_a","segment","kv","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","scheme","repoInfo","colonInd","slashInd","questionMarkInd","queryParams","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","random","NamedNode","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","setMaxNode","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","action","exportFormat",".value",".priority","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","setNodeFromJSON","setMaxNode$1","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","next","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","childrenNode","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","getQueryParams","getIndex","snapshotNode","eventData","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","getCount","thisCount","otherKey","getAnyKey","thisKey","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","catch","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","error$$1","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","find","childKey","remember","forget","self_1","safeToRemove","forEachTree","prefixPath","func","generateWithValues","values","Date","getTime","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","getValues","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","completeView","findValue","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","write","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","findKey","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","getToken","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","close","myDisconnFrame","send","dataStr","base64data","base64Encode","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","nextSeg","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","User-Agent","SDK_VERSION","NODE_ENV","BASE_URL","origin","mySock","onopen","onclose","m","handleIncomingFrame","isOldAndroid","oldAndroidRegex","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","queryStringParameters","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","DATABASE_URL_OPTION","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","TEST_ACCESS","registerDatabase","instance","registerService","unused","arch","execPath","title","pid","browser","argv","chdir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","ceil","bitmap","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","step","iterFn","done","MATCH","KEY","re","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","$Promise","isNode","newPromiseCapability","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","isReject","chain","ok","reaction","exited","fail","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","G","W","capability","$$reject","x","all","$index","alreadyCalled","race","SHARED","$sort","comparefn","core","PROTOTYPE","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","R","SAFE_CLOSING","riter","skipClosing","propertyIsEnumerable","$includes","IObject","valueOf","fetch","support","searchParams","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Headers","append","normalizeName","normalizeValue","thisArg","iteratorFor","Request","_bodyInit","Body","Response","statusText","redirectStatuses","redirect","RangeError","input","parseHeaders","getAllResponseHeaders","responseURL","ontimeout","credentials","withCredentials","responseType","setRequestHeader","polyfill","header","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","fromCharCode","bufferClone","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","decode","parse","normalizeMethod","upcased","referrer","form","bytes","rawHeaders","preProcessedHeaders","line","bodyInit","toInteger","__g","DESCRIPTORS","FProto","nameRE","__e","macrotask","MutationObserver","WebKitMutationObserver","head","flush","standalone","toggle","characterData","IE8_DOM_DEFINE","toPrimitive","Attributes","setTimeoutFunc","_state","_handled","_deferreds","doResolve","handle","_immediateFn","newValue","finale","_unhandledRejectionFn","Handler","prom","globalNS","createCommonjsModule","_global","_core","_isObject","_anObject","_fails","_descriptors","_domCreate","_ie8DomDefine","_toPrimitive","_objectDp","_propertyDesc","_hide","_has","px","_redefine","_aFunction","_ctx","_export","_cof","_iobject","_defined","_toObject","_toInteger","_toLength","_isArray","_shared","_wks","_arraySpeciesConstructor","_arraySpeciesCreate","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","UNSCOPABLES","_addToUnscopables","$find","forced","$find$1","KEY$1","forced$1","_toIobject","min$1","_toAbsoluteIndex","_arrayIncludes","IS_INCLUDES","fromIndex","shared","_sharedKey","arrayIndexOf","IE_PROTO","_objectKeysInternal","names","_enumBugKeys","_objectKeys","f$1","getOwnPropertySymbols","_objectGops","f$2","_objectPie","$assign","assign","_objectAssign","A","K","aLen","getSymbols","isEnum","_isRegexp","_stringContext","MATCH$1","_failsIsRegexp","STARTS_WITH","$startsWith","startsWith","_stringRepeat","repeat","_meta","META","setDesc","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","_setToStringTag","f$3","_wksExt","_library","_wksDefine","$Symbol","_enumKeys","symbols","_objectDps","Properties","document$1","_html","IE_PROTO$1","PROTOTYPE$1","createDict","iframeDocument","lt","gt","_objectCreate","hiddenKeys","f$4","_objectGopn","gOPN","toString$1","windowNames","getWindowNames","f$5","_objectGopnExt","gOPD","f$6","_objectGopd","gOPD$1","dP$1","gOPN$1","$JSON","_stringify","PROTOTYPE$2","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","QObject","findChild","setSymbolDesc","protoDesc","wrap","sym","isSymbol","$defineProperty","$defineProperties","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","TAG$1","_classof","_stringAt","_iterators","IteratorPrototype","_iterCreate","IE_PROTO$2","ObjectProto$1","_objectGpo","getPrototypeOf","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","_iterDefine","Base","IS_SET","FORCED","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","$at","iterated","point","_iterStep","es6_array_iterator","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","__importDefault","extendStatics","setPrototypeOf","__","__assign","__rest","__decorate","decorators","desc","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","_arguments","generator","fulfilled","y","g","label","sent","trys","ops","verb","throw","return","__exportStar","__values","__read","ar","__spread","__await","__asyncGenerator","asyncIterator","settle","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","mod","PromiseCapability","$$resolve","instances","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","DEBUG","WARN","ERROR","_logLevel","_logHandler","debug","setLogLevel","level","inst","promiseCapability","toIObject","toAbsoluteIndex","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","firebase_","isDeleted_","services_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","getUid","addAuthTokenListener","removeAuthTokenListener","checkDestroyed_","removeApp","services","serviceKey","instanceKey","service","_getService","instanceIdentifier","instanceSpecifier","factories","extendApp","deepExtend","createFirebaseNamespace","apps_","appHooks","initializeApp","apps","extendNamespace","createSubscribe","ErrorFactory","useAsService","callAppHooks","rawConfig","name_1","getApps","createService","serviceProperties","appHook","allowMultipleInstances","serviceNamespace","appArg","serviceFxn","eventName","serviceName","factoryName","useService","patchProperty","appErrors","errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","eval","_defineProperty","_objectSpread","assertion","byteArrayToString","c1","c2","c3","c4","u","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Decode","dateValue","getUA","ERROR_NAME","captureStackTrace","patchCapture","captureFake","FirebaseError","template","fullCode","claims","signature","isValidTimestamp","validSince","validUntil","issuedAtTime","decoded","objTo","objFrom","isNonNullObject","rv","opt_obj","opt_this","querystringParams","arrayVal","querystringDecode","tokens","Hash","blockSize","chain_","buf_","W_","pad_","inbuf_","total_","reset","compress_","opt_offset","opt_length","lengthMinusBlock","inbuf","totalBits","onNoObservers","ObserverProxy","subscribe","observers","unsubscribes","observerCount","finalized","forEachObserver","observer","nextOrObserver","implementsAnyMethods","unsub","unsubscribeOne","finalError","sendOne","onError","methods_1","minCount","maxCount","argCount","argError","argName","validateNamespace","stringToByteArray$1"],"mappings":"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","file":"js/chunk-vendors.d0de4bce.js","sourcesContent":["var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n"],"sourceRoot":""}